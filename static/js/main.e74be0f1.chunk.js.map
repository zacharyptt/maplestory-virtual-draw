{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["darkTheme","createTheme","palette","mode","data8614","App","useState","drawData","setDrawData","formatData","data","split","map","value","name","chance","parseFloat","slice","resultList","setResultList","nums","setNums","text","setText","_bottom","useRef","_scroll","useEffect","maxScrollTop","current","scrollHeight","clientHeight","scrollTop","ThemeProvider","theme","CssBaseline","Container","sx","marginTop","Link","target","rel","href","Box","display","flexDirection","xs","sm","flex","TextField","label","multiline","maxRows","onChange","event","Button","onClick","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","count","mx","alignItems","test","length","i","resultIndex","random","Math","thisData","draw","produce","draft","Typography","state","height","overflow","px","ref","index","marginBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e74be0f1.chunk.js","sourcesContent":["import TextField from '@mui/material/TextField';\nimport React, {useEffect, useRef, useState} from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport produce from 'immer';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Link from '@mui/material/Link';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n    },\n});\nconst data8614 = `工匠方塊\t20.00%\n名匠方塊\t2.50%\n完美烙印的印章\t5.00%\n白金鎚子\t5.00%\n卷軸20格欄位背包\t4.00%\n性向成長密藥\t6.00%\n選擇欄8格擴充券\t5.50%\n特殊名譽勳章\t5.00%\n200靈魂卷軸100%\t3.00%\n純白的卷軸100%\t5.00%\n恢復卡交換券\t3.00%\n回真卷軸100%\t4.00%\nV單手武器攻擊力卷軸\t2.00%\nV單手武器魔力卷軸\t2.00%\nV雙手武器攻擊力卷軸\t2.00%\nV雙手武器魔力卷軸\t2.00%\nV防具攻擊力卷軸\t2.00%\nV防具魔力卷軸\t2.00%\nV裝飾品攻擊力卷軸\t2.00%\nV裝飾品魔力卷軸\t2.00%\nV寵物裝備攻擊力卷軸\t2.00%\nV寵物裝備魔力卷軸\t2.00%\n究極黑暗雙手武器攻擊力卷軸\t0.70%\n究極黑暗雙手武器魔力卷軸\t0.70%\n究極的黑暗單手武器攻擊力卷軸\t0.70%\n究極的黑暗單手武器魔力卷軸\t0.70%\n究極的黑暗飾品攻擊力卷軸\t0.70%\n究極的黑暗飾品魔力卷軸\t0.70%\n究極的黑暗防具攻擊力卷軸\t0.70%\n究極的黑暗防具魔力卷軸\t0.70%\n究極的黑暗寵物裝備攻擊力卷軸\t0.70%\n究極的黑暗寵物裝備魔力卷軸\t0.70%\n命運單手武器攻擊力卷軸\t0.50%\n命運單手武器魔力卷軸\t0.50%\n命運雙手武器攻擊力卷軸\t0.50%\n命運雙手武器魔力卷軸\t0.50%\n命運飾品攻擊力卷軸\t0.50%\n命運飾品魔力卷軸\t0.50%\n命運防具攻擊力卷軸\t0.50%\n命運防具魔力卷軸\t0.50%\n命運寵物裝備攻擊力卷軸\t0.50%\n命運寵物裝備魔力卷軸\t0.50%`;\nfunction App() {\n    const [drawData, setDrawData] = useState([]);\n    const formatData = (data) => {\n        return data.split('\\n').map((value) => {\n            const [name, chance] = value.split('\\t');\n            return {name, chance: parseFloat(chance.slice(0, -1))};\n        });\n    };\n    const draw = () => {\n        const random = Math.random();\n        let count = 0;\n        for (let i = 0; i < drawData.length; i++) {\n            const thisData = drawData[i];\n            if (random >= count && random <= count + thisData.chance / 100) {\n                return i;\n            } else {\n                count = count + thisData.chance / 100;\n            }\n        }\n    };\n    const [resultList, setResultList] = useState([]);\n    const [nums, setNums] = useState(1);\n    const [text, setText] = useState('');\n    const _bottom = useRef();\n    const _scroll = useRef();\n\n    useEffect(() => {\n        // _bottom.current.scrollIntoView({behavior: 'smooth'});\n        const scrollHeight = _scroll.current.scrollHeight;\n        const height = _scroll.current.clientHeight;\n        const maxScrollTop = scrollHeight - height;\n        _scroll.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }, [resultList]);\n    useEffect(() => {\n        setDrawData(formatData(data8614));\n    }, []);\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <div>\n                <CssBaseline />\n                <Container sx={{marginTop: 10}}>\n                    <Link\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                        href=\"https://tw.beanfun.com/beanfuncommon/EventAD_Mobile/EventAD.aspx?EventADID=5325\"\n                    >\n                        楓之谷機率連結\n                    </Link>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            flexDirection: {\n                                xs: 'column-reverse',\n                                sm: 'row',\n                                // md: 'column-reverse',\n                                // lg: 'column-reverse',\n                                // xl: 'column-reverse',\n                            },\n                        }}\n                    >\n                        <Box sx={{display: 'flex', flexDirection: 'column', flex: 1}}>\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    marginTop: 1,\n                                }}\n                            >\n                                <TextField\n                                    label=\"輸入抽獎資料\"\n                                    multiline\n                                    maxRows={4}\n                                    value={text}\n                                    onChange={(event) => {\n                                        setText(event.target.value);\n                                    }}\n                                />\n                                <Button\n                                    onClick={() => {\n                                        if (text !== '') {\n                                            setDrawData(formatData(text));\n                                            setText('');\n                                            setResultList([]);\n                                        }\n                                    }}\n                                >\n                                    設定\n                                </Button>\n                                <Button\n                                    onClick={() => {\n                                        setDrawData(formatData(data8614));\n                                        setText('');\n                                        setResultList([]);\n                                    }}\n                                >\n                                    設定為畫框資料\n                                </Button>\n                            </Box>\n                            <TableContainer component={Paper} sx={{marginTop: 2}}>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>獎項</TableCell>\n                                            <TableCell align=\"right\">機率</TableCell>\n                                            <TableCell align=\"right\">次數</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {drawData.map(({name, chance, count}) => (\n                                            <TableRow key={name}>\n                                                <TableCell>{name}</TableCell>\n                                                <TableCell align=\"right\">{chance}%</TableCell>\n                                                <TableCell align=\"right\">{count}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Box>\n                        <Box sx={{mx: 2}} />\n                        <Box sx={{display: 'flex', flexDirection: 'column', flex: 1}}>\n                            <Box sx={{display: 'flex', alignItems: 'center', marginTop: 1}}>\n                                <TextField\n                                    label=\"抽取次數\"\n                                    value={nums}\n                                    onChange={(event) => {\n                                        const value = event.target.value;\n                                        if (/^[1-9]\\d*$/.test(value) || value === '') {\n                                            setNums(value);\n                                        }\n                                    }}\n                                />\n                                <Button\n                                    onClick={() => {\n                                        if (drawData.length === 0) {\n                                            return;\n                                        }\n                                        for (let i = 0; i < nums; i++) {\n                                            const resultIndex = draw();\n                                            setResultList((value) => [...value, drawData[resultIndex].name]);\n                                            setDrawData(\n                                                produce((draft) => {\n                                                    draft[resultIndex].count = (draft[resultIndex].count || 0) + 1;\n                                                })\n                                            );\n                                        }\n                                    }}\n                                >\n                                    抽\n                                </Button>\n                            </Box>\n                            <Box sx={{flexDirection: 'row'}}>\n                                <Typography>總數：{resultList.length}</Typography>\n                                <Button\n                                    onClick={() => {\n                                        setResultList([]);\n                                        setDrawData((state) => state.map(({name, chance}) => ({name, chance})));\n                                    }}\n                                >\n                                    清除\n                                </Button>\n                            </Box>\n                            <Paper\n                                sx={{\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    height: 500,\n                                    overflow: 'auto',\n                                    px: 5,\n                                }}\n                                ref={_scroll}\n                            >\n                                {resultList.map((value, index) => (\n                                    <Box key={index} sx={{marginBottom: 1}}>\n                                        {value}\n                                    </Box>\n                                ))}\n                                <div ref={_bottom}></div>\n                            </Paper>\n                        </Box>\n                    </Box>\n                </Container>\n            </div>\n        </ThemeProvider>\n    );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}