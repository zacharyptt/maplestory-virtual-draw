{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["darkTheme","createTheme","palette","mode","data8369","App","useState","drawData","setDrawData","formatData","data","trim","split","map","value","name","chance","parseFloat","slice","resultList","setResultList","nums","setNums","text","setText","_bottom","useRef","_scroll","useEffect","maxScrollTop","current","scrollHeight","clientHeight","scrollTop","average","useMemo","length","reduce","previousValue","currentValue","parseInt","ThemeProvider","theme","CssBaseline","Container","sx","marginTop","Link","target","rel","href","Box","Button","onClick","display","flexDirection","xs","sm","flex","TextField","label","multiline","maxRows","onChange","event","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","count","mx","alignItems","test","i","resultIndex","random","Math","thisData","draw","produce","draft","ReactGA","category","action","Typography","state","height","overflow","px","ref","index","marginBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ef7b317.chunk.js","sourcesContent":["import TextField from '@mui/material/TextField';\nimport React, {useEffect, useMemo, useRef, useState} from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport produce from 'immer';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Link from '@mui/material/Link';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport ReactGA from 'react-ga';\n// ReactGA.initialize('G-68SES6VVEW');\n// console.log(window.location.pathname + window.location.search);\n// ReactGA.pageview(window.location.pathname + window.location.search);\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n    },\n});\nconst data8614 = `工匠方塊\t20.00%\n名匠方塊\t2.50%\n完美烙印的印章\t5.00%\n白金鎚子\t5.00%\n卷軸20格欄位背包\t4.00%\n性向成長密藥\t6.00%\n選擇欄8格擴充券\t5.50%\n特殊名譽勳章\t5.00%\n200靈魂卷軸100%\t3.00%\n純白的卷軸100%\t5.00%\n恢復卡交換券\t3.00%\n回真卷軸100%\t4.00%\nV單手武器攻擊力卷軸\t2.00%\nV單手武器魔力卷軸\t2.00%\nV雙手武器攻擊力卷軸\t2.00%\nV雙手武器魔力卷軸\t2.00%\nV防具攻擊力卷軸\t2.00%\nV防具魔力卷軸\t2.00%\nV裝飾品攻擊力卷軸\t2.00%\nV裝飾品魔力卷軸\t2.00%\nV寵物裝備攻擊力卷軸\t2.00%\nV寵物裝備魔力卷軸\t2.00%\n究極黑暗雙手武器攻擊力卷軸\t0.70%\n究極黑暗雙手武器魔力卷軸\t0.70%\n究極的黑暗單手武器攻擊力卷軸\t0.70%\n究極的黑暗單手武器魔力卷軸\t0.70%\n究極的黑暗飾品攻擊力卷軸\t0.70%\n究極的黑暗飾品魔力卷軸\t0.70%\n究極的黑暗防具攻擊力卷軸\t0.70%\n究極的黑暗防具魔力卷軸\t0.70%\n究極的黑暗寵物裝備攻擊力卷軸\t0.70%\n究極的黑暗寵物裝備魔力卷軸\t0.70%\n命運單手武器攻擊力卷軸\t0.50%\n命運單手武器魔力卷軸\t0.50%\n命運雙手武器攻擊力卷軸\t0.50%\n命運雙手武器魔力卷軸\t0.50%\n命運飾品攻擊力卷軸\t0.50%\n命運飾品魔力卷軸\t0.50%\n命運防具攻擊力卷軸\t0.50%\n命運防具魔力卷軸\t0.50%\n命運寵物裝備攻擊力卷軸\t0.50%\n命運寵物裝備魔力卷軸\t0.50%`;\nconst dataDestiny = `\n+12\t4%\n+13\t6%\n+14\t31%\n+15\t30%\n+16\t14%\n+17\t7%\n+18\t5%\n+19\t2%\n+20\t1%\n`;\nconst data8369 = `\n輪迴碑石\t0.03%\n漆黑的BOSS飾品碎片\t6.00%\n神秘冥界武器變換箱\t0.30%\n神秘冥界防具變換箱\t0.30%\n星力16星強化卷軸\t0.50%\n星力15星強化卷軸\t0.50%\n星力14星強化卷軸\t0.50%\n鈦之心\t0.50%\n精靈之心\t0.50%\n露希妲靈魂寶珠\t0.30%\n艾畢奈亞靈魂寶珠\t0.30%\n黃金鐵鎚100%\t1.00%\n附加潛在能力賦予卷軸70%\t1.00%\n睿智葫蘆\t0.40%\n航海師武器變換箱\t0.55%\n航海師防具變換箱\t0.55%\n航海師混合弓\t0.15%\n航海師強弩\t0.15%\n航海師雙弩槍\t0.15%\n航海師閃耀之杖\t0.15%\n航海師文字短杖\t0.15%\n航海師文字長杖\t0.15%\n航海師魔法護腕\t0.15%\n航海師扇子\t0.15%\n航海師ESP限制器\t0.15%\n航海師幻獸棒\t0.15%\n航海師死亡魔劍\t0.15%\n航海師軍刀\t0.15%\n航海師雙刃斧\t0.15%\n航海師十字錘\t0.15%\n航海師重劍\t0.15%\n航海師戰斧\t0.15%\n航海師戰錘\t0.15%\n航海師穿刺槍\t0.15%\n航海師戰戟\t0.15%\n航海師重拳槍\t0.15%\n航海師太刀\t0.15%\n航海師鎖鏈\t0.15%\n航海師短刀\t0.15%\n航海師雙刀\t0.15%\n航海師手杖\t0.15%\n航海師復仇拳套\t0.15%\n航海師能量劍\t0.15%\n航海師靈魂射手\t0.15%\n航海師能量劍\t0.15%\n航海師指虎\t0.15%\n航海師手槍\t0.15%\n航海師加農火砲\t0.15%\n航海師古代之弓\t0.15%\n航海師仙扇\t0.15%\n航海師調節器\t0.15%\n航海師武拳\t0.15%\n航海師龍息射手\t0.15%\n核心寶石20個交換券\t1.50%\n永遠的輪迴星火\t1.30%\n奧術之河水滴石\t1.30%\n太初的水滴石\t1.30%\n水中信紙眼飾\t1.30%\n凝聚力量的結晶石\t1.30%\n銀花戒指\t1.30%\n戴雅希杜斯耳環\t1.30%\n混沌闇黑龍王的項鍊\t1.30%\n金花草腰帶\t1.30%\n梅克奈特墜飾\t1.30%\n皇家暗黑合金護肩\t1.30%\n支配者墜飾\t1.30%\n星力13星強化卷軸\t1.50%\n星力12星強化卷軸\t1.50%\n水晶之心\t1.50%\n鋰之心\t1.50%\n航海師弓箭手斗篷\t0.25%\n航海師弓箭手手套\t0.25%\n航海師弓箭手鞋\t0.25%\n航海師弓箭手套裝\t0.25%\n航海師弓箭手護肩\t0.25%\n航海師弓箭手帽\t0.25%\n航海師法師斗篷\t0.25%\n航海師法師手套\t0.25%\n航海師法師鞋\t0.25%\n航海師法師套裝\t0.25%\n航海師法師護肩\t0.25%\n航海師法師帽\t0.25%\n航海師劍士斗篷\t0.25%\n航海師劍士手套\t0.25%\n航海師劍士鞋\t0.25%\n航海師劍士套裝\t0.25%\n航海師劍士護肩\t0.25%\n航海師劍士頭盔\t0.25%\n航海師盜賊斗篷\t0.25%\n航海師盜賊手套\t0.25%\n航海師盜賊鞋\t0.25%\n航海師盜賊套裝\t0.25%\n航海師盜賊護肩\t0.25%\n航海師盜賊帽\t0.25%\n航海師海盜斗篷\t0.25%\n航海師海盜手套\t0.25%\n航海師海盜鞋\t0.25%\n航海師海盜套裝\t0.25%\n航海師海盜護肩\t0.25%\n航海師海盜帽\t0.25%\n核心寶石15個交換券\t1.40%\n核心寶石10個交換券\t1.40%\n強力輪迴星火\t1.40%\n製作物品20格欄位包包\t1.00%\n製作書20格背包\t1.00%\n椅子20個欄位包包\t1.00%\n稱號 20格名片錢包\t1.00%\n卷軸20格背包\t1.00%\n回真卷軸50%\t1.50%\n稀有潛在能力卷軸80%\t1.50%\n幸運日卷軸\t1.50%\n機器人商店使用卷 (30天)\t1.00%\n初級能量硬幣(A級)\t1.70%\n微弱烙印的靈魂石\t1.70%\n星力11星強化卷軸\t1.70%\n星力10星強化卷軸\t1.70%\n選擇欄位8格擴充券\t1.70%\n黃金愛心\t1.72%\n經驗累積的秘藥\t0.60%\n獲得財物的秘藥\t0.60%\n忍耐的秘藥\t0.60%\n覺醒的秘藥\t0.60%\n無敵的秘藥\t0.60%\n最上級力量強化秘藥\t0.60%\n最上級智慧強化秘藥\t0.60%\n最上級敏捷強化秘藥\t0.60%\n最上級幸運強化秘藥\t0.60%\n傳說中的英雄秘藥\t0.60%\n傳說中的祝福秘藥\t0.60%\n最上級英雄的秘藥\t0.60%\n最上級祝福的秘藥\t0.60%\n核心寶石5個交換券\t1.50%\n核心寶石4個交換券\t1.50%\n核心寶石3個交換券\t1.50%\n核心寶石2個交換券\t1.50%\n核心寶石1個交換券\t1.50%\n皮卡啾的靈魂寶珠\t1.30%\n凡雷恩的靈魂寶珠\t1.30%\n搖滾精神的靈魂寶珠\t1.30%\n闇黑龍王的靈魂寶珠\t1.30%\n雷克斯的靈魂寶珠\t1.30%\n龍騎士的靈魂寶珠\t1.30%\n殘暴炎魔的靈魂寶珠\t1.30%\n亞尼的靈魂寶珠\t1.30%\n`;\nfunction App() {\n    const [drawData, setDrawData] = useState([]);\n    const formatData = (data) => {\n        return data\n            .trim()\n            .split('\\n')\n            .map((value) => {\n                const [name, chance] = value.split('\\t');\n                return {name, chance: parseFloat(chance.slice(0, -1))};\n            });\n    };\n    const draw = () => {\n        const random = Math.random();\n        let count = 0;\n        for (let i = 0; i < drawData.length; i++) {\n            const thisData = drawData[i];\n            if (random >= count && random <= count + thisData.chance / 100) {\n                return i;\n            } else {\n                count = count + thisData.chance / 100;\n            }\n        }\n    };\n    const [resultList, setResultList] = useState([]);\n    const [nums, setNums] = useState(1);\n    const [text, setText] = useState('');\n    const _bottom = useRef();\n    const _scroll = useRef();\n\n    useEffect(() => {\n        // _bottom.current.scrollIntoView({behavior: 'smooth'});\n        const scrollHeight = _scroll.current.scrollHeight;\n        const height = _scroll.current.clientHeight;\n        const maxScrollTop = scrollHeight - height;\n        _scroll.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }, [resultList]);\n    useEffect(() => {\n        // setDrawData(formatData(dataDestiny));\n        // setDrawData(formatData(data8614));\n        setDrawData(formatData(data8369));\n    }, []);\n    const average = useMemo(() => {\n        if (resultList.length === 0) {\n            return 0;\n        }\n        const sum = resultList.reduce((previousValue, currentValue) => previousValue + parseInt(currentValue), 0);\n        return sum / resultList.length;\n    }, [resultList]);\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <div>\n                <CssBaseline />\n                <Container sx={{marginTop: 10}}>\n                    <Link\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                        href=\"https://tw.beanfun.com/beanfuncommon/EventAD_Mobile/EventAD.aspx?EventADID=5325\"\n                    >\n                        楓之谷機率連結\n                    </Link>\n                    <Box sx={{marginTop: 2}}>\n                        <Button\n                            onClick={() => {\n                                setDrawData(formatData(data8614));\n                                setText('');\n                                setResultList([]);\n                            }}\n                        >\n                            模擬抽畫框\n                        </Button>\n                        <Button\n                            onClick={() => {\n                                setDrawData(formatData(dataDestiny));\n                                setText('');\n                                setResultList([]);\n                            }}\n                        >\n                            模擬衝命運武器卷\n                        </Button>\n                        <Button\n                            onClick={() => {\n                                setDrawData(formatData(data8369));\n                                setText('');\n                                setResultList([]);\n                            }}\n                        >\n                            模擬抽黃金蘋果（大獎輪迴碑石）\n                        </Button>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            flexDirection: {\n                                xs: 'column-reverse',\n                                sm: 'row',\n                            },\n                        }}\n                    >\n                        <Box sx={{display: 'flex', flexDirection: 'column', flex: 1}}>\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    marginTop: 1,\n                                }}\n                            >\n                                <TextField\n                                    label=\"輸入抽獎資料\"\n                                    multiline\n                                    maxRows={4}\n                                    value={text}\n                                    onChange={(event) => {\n                                        setText(event.target.value);\n                                    }}\n                                />\n                                <Button\n                                    onClick={() => {\n                                        if (text !== '') {\n                                            setDrawData(formatData(text));\n                                            setText('');\n                                            setResultList([]);\n                                        }\n                                    }}\n                                >\n                                    設定\n                                </Button>\n                            </Box>\n                            <TableContainer component={Paper} sx={{marginTop: 2}}>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>獎項</TableCell>\n                                            <TableCell align=\"right\">機率</TableCell>\n                                            <TableCell align=\"right\">次數</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {drawData.map(({name, chance, count}) => (\n                                            <TableRow key={name}>\n                                                <TableCell>{name}</TableCell>\n                                                <TableCell align=\"right\">{chance}%</TableCell>\n                                                <TableCell align=\"right\">{count}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Box>\n                        <Box sx={{mx: 2}} />\n                        <Box sx={{display: 'flex', flexDirection: 'column', flex: 1}}>\n                            <Box sx={{display: 'flex', alignItems: 'center', marginTop: 1}}>\n                                <TextField\n                                    label=\"抽取次數\"\n                                    value={nums}\n                                    onChange={(event) => {\n                                        const value = event.target.value;\n                                        if (/^[1-9]\\d*$/.test(value) || value === '') {\n                                            setNums(value);\n                                        }\n                                    }}\n                                />\n                                <Button\n                                    onClick={() => {\n                                        if (drawData.length === 0) {\n                                            return;\n                                        }\n                                        for (let i = 0; i < nums; i++) {\n                                            const resultIndex = draw();\n                                            setResultList((value) => [...value, drawData[resultIndex].name]);\n                                            setDrawData(\n                                                produce((draft) => {\n                                                    draft[resultIndex].count = (draft[resultIndex].count || 0) + 1;\n                                                })\n                                            );\n                                        }\n                                        ReactGA.event({category: 'User', action: 'draw'});\n                                    }}\n                                >\n                                    抽\n                                </Button>\n                            </Box>\n                            <Box sx={{flexDirection: 'row'}}>\n                                <Typography>總數：{resultList.length}</Typography>\n                                {!!average && <Typography>平均：{average}</Typography>}\n                                <Button\n                                    onClick={() => {\n                                        setResultList([]);\n                                        setDrawData((state) => state.map(({name, chance}) => ({name, chance})));\n                                    }}\n                                >\n                                    清除\n                                </Button>\n                            </Box>\n                            <Paper\n                                sx={{\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    height: 500,\n                                    overflow: 'auto',\n                                    px: 5,\n                                }}\n                                ref={_scroll}\n                            >\n                                {resultList.slice(-100).map((value, index) => (\n                                    <Box key={index} sx={{marginBottom: 1}}>\n                                        {value}\n                                    </Box>\n                                ))}\n                                <div ref={_bottom}></div>\n                            </Paper>\n                        </Box>\n                    </Box>\n                </Container>\n            </div>\n        </ThemeProvider>\n    );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}